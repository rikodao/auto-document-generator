## ファイル概要

このファイルは、Amazon S3 バケットにアップロードされた画像から顔を検出し、その顔の部分を切り抜いて別の S3 バケットに保存する AWS Lambda 関数です。boto3 ライブラリを使用して Amazon S3 および Amazon Rekognition サービスとやり取りを行います。

## 主要なサブルーチン

### lambda_handler(event, context)
- 引数: event (dict), context (object)
- 戻り値: dict (ステータスコードと結果メッセージ)
- S3 イベントからバケット名とファイル名を取得し、アップロードされた画像を取得します。
- Rekognition を使用して画像内の顔を検出します。
- 検出された顔の境界ボックス情報から、顔の部分を切り抜きます。
- 切り抜いた顔の画像を別の S3 バケットにアップロードします。

## データ構造

特に複雑なデータ構造は使用されていません。標準的な Python のデータ型を使用しています。

## 主要なアルゴリズム

顔検出には Amazon Rekognition の detect_faces() 関数を使用しています。
顔の切り抜きには、Pillow ライブラリの Image.crop() 関数を使用しています。

## 入出力

### 入力
- Amazon S3 バケットにアップロードされた画像ファイル

### 出力
- 別の Amazon S3 バケットに保存された、切り抜いた顔の画像ファイル

## 利用している外部モジュールやライブラリの説明

- boto3: AWS サービスとやり取りするための Python ライブラリ
- PIL (Python Imaging Library): 画像処理を行うための Python ライブラリ

## エラー処理の方法

- 画像内に顔が検出されなかった場合は、ステータスコード 400 と "No faces detected." というメッセージを返します。
- 顔が検出された場合は、ステータスコード 200 と "Face detected and cropped successfully!" というメッセージを返します。

## その他の注意点

- 環境変数 CROPED_BUCKET に、切り抜いた顔の画像を保存する S3 バケット名を設定する必要があります。
- ロギングには logging モジュールを使用しています。